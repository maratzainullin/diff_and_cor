Папка run:

1) run_wsa.sh -- запускает скрипт ovito (../source/wsa.py), в цикле нужно указать
необходимые температуры

2) diff.sbatch -- запускает один lammps скрипт (../source/diff.lmp)
для получения данных дампов и других данных по диффузии,
запускается из run_all_diff.sh

3) run_all_diff.sh -- запускает diff.sbatch на разных температурах

4) run_an_comp.sh -- запускает скрипт на питоне (../source/compute_diff.py),
считает коеф дифф и фк по результатам wsa


Порядок запуска (переходим в папку run):

1) В run_all_diff.sh указать необходимый диапазон температур в цикле,
время рассчета (ST) и размер системы (C)

2) В diff.sbatch изменить параметры запуска для slurm, если нужно

3) Запустить run_all_diff.sh и дождаться оканчания рассчетов

4) В run_wsa.sh указать необходимый диапазон температур в цикле,
время рассчета (ST) и размер системы (C),
изменить параметры запуска для slurm, если нужно

5) Запустить run_wsa.sh и дождаться оканчания рассчетов

6) В run_an_comp.sh указать необходимый диапазон температур в цикле,
время рассчета (ST) и размер системы (C),
изменить параметры запуска для slurm, если нужно

7) Запустить run_an_comp.sh и дождаться оканчания рассчетов (быстро)

8) Можно запускать ../source/fast_check.py для отслеживания прогресса. Вывод
выполнения идет в slurm_out/*.o

Необходимо:
1) ovito
2) python3; пакеты numpy (для python3), matplotlib, progress (для прогресс-бара
в wsa.py, его можно отключить, убрав строки, содержащие bar)


Результаты:

1) После выполнения diff.lmp (пункты 1-3) в ./Data/... должны появится:
 		- clear.dump -- референс для wsa
		- sia.dump -- для wsa
		- thermo_msd.txt -- для рассчета темепратуры, давления и коэф дифф меченых
		- diff.log -- лог

2) После выполнения wsa.py (пункты 4-5) в ./Results/... должны появится:
 		- coords_unwraped.txt -- координаты дефекта от времени

3) Все промежуточные результаты в в папке Results/...

4) После выполнения compute_diff.py появится
итоговый результат в корне в файле final_result.txt
